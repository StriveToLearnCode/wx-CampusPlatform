{"version":3,"file":"axios-miniprogram.cjs.js","sources":["../src/request/cancel.ts","../src/request/createError.ts","../src/constants/methods.ts","../src/helpers/types.ts","../src/helpers/error.ts","../src/helpers/ensureObject.ts","../src/helpers/dynamicURL.ts","../src/helpers/deepMerge.ts","../src/helpers/ignore.ts","../src/request/flattenHeaders.ts","../src/request/transformData.ts","../src/helpers/buildURL.ts","../src/helpers/isAbsoluteURL.ts","../src/helpers/combineURL.ts","../src/helpers/transformURL.ts","../src/helpers/getHttpStatusText.ts","../src/request/generateType.ts","../src/request/request.ts","../src/request/dispatchRequest.ts","../src/core/InterceptorManager.ts","../src/core/MiddlewareManager.ts","../src/core/mergeConfig.ts","../src/core/Axios.ts","../src/core/createInstance.ts","../src/adpater/createAdapter.ts","../src/adpater/getDefaultAdapter.ts","../src/defaults.ts","../src/version.ts","../src/axios.ts"],"sourcesContent":["export interface CancelAction {\n  /**\n   * 取消信息\n   */\n  (message?: string): void;\n}\n\nexport interface CancelExecutor {\n  (cancel: CancelAction): void;\n}\n\nexport interface CancelTokenSource {\n  /**\n   * 取消令牌\n   */\n  token: CancelToken;\n  /**\n   * 取消函数\n   */\n  cancel: CancelAction;\n}\n\nexport interface CancelTokenConstructor {\n  new (executor: CancelExecutor): CancelToken;\n  source(): CancelTokenSource;\n}\n\nexport class Cancel {\n  message?: string;\n\n  constructor(message?: string) {\n    this.message = message;\n  }\n\n  toString(): string {\n    const message = this.message ? `: ${this.message}` : '';\n\n    return `Cancel${message}`;\n  }\n}\n\nexport function isCancel(value: unknown): value is Cancel {\n  return value instanceof Cancel;\n}\n\nexport class CancelToken {\n  /**\n   * @internal\n   */\n  private declare reason?: Cancel;\n\n  /**\n   * @internal\n   */\n  declare onCancel: Promise<Cancel>['then'];\n\n  constructor(executor: CancelExecutor) {\n    let action!: CancelAction;\n    const promise = new Promise<Cancel>((resolve) => {\n      action = (message) => {\n        if (this.reason) {\n          return;\n        }\n\n        this.reason = new Cancel(message);\n\n        resolve(this.reason);\n      };\n    });\n\n    this.onCancel = promise.then.bind(promise);\n\n    executor(action);\n  }\n\n  static source(): CancelTokenSource {\n    let cancel!: CancelAction;\n    const token = new CancelToken((action) => {\n      cancel = action;\n    });\n\n    return {\n      token,\n      cancel,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  throwIfRequested(): void {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n}\n\nexport function isCancelToken(value: unknown): value is CancelToken {\n  return value instanceof CancelToken;\n}\n","import { AxiosAdapterPlatformTask } from '../adpater/createAdapter';\nimport {\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosResponseError,\n} from '../core/Axios';\n\nexport type AxiosErrorResponse = AxiosResponse | AxiosResponseError;\n\nclass AxiosError extends Error {\n  config: AxiosRequestConfig;\n  request: AxiosAdapterPlatformTask;\n  response: AxiosErrorResponse;\n\n  constructor(\n    message: string,\n    config: AxiosRequestConfig,\n    response: AxiosErrorResponse,\n    request: AxiosAdapterPlatformTask,\n  ) {\n    super(message);\n    this.config = config;\n    this.request = request;\n    this.response = response;\n  }\n}\n\nexport function createError(\n  message: string,\n  config: AxiosRequestConfig,\n  response: AxiosErrorResponse,\n  request: AxiosAdapterPlatformTask,\n) {\n  return new AxiosError(message, config, response, request);\n}\n\nexport function isAxiosError(value: unknown): value is AxiosError {\n  return value instanceof AxiosError;\n}\n","/**\n * 普通的请求方法名称\n */\nexport const PLAIN_METHODS = ['options', 'trace', 'connect'] as const;\n\n/**\n * 带参数的请求方法名称\n */\nexport const WITH_PARAMS_METHODS = ['head', 'get', 'delete'] as const;\n\n/**\n * 带数据的请求方法名称\n */\nexport const WITH_DATA_METHODS = ['post', 'put', 'patch'] as const;\n\n/**\n * 可以携带 data 的请求方法\n */\nexport const WITH_DATA_RE = new RegExp(\n  `^(${WITH_DATA_METHODS.join('|')})`,\n  'i',\n);\n","const _toString = Object.prototype.toString;\n\nexport function isNull(value: any): value is null {\n  return value === null;\n}\n\nexport function isUndefined(value: any): value is undefined {\n  return typeof value === 'undefined';\n}\n\nexport function isString(value: any): value is string {\n  return (\n    typeof value === 'string' || _toString.call(value) === '[object String]'\n  );\n}\n\nexport function isPlainObject<T extends AnyObject>(value: any): value is T {\n  return _toString.call(value) === '[object Object]';\n}\n\nexport function isArray<T = unknown>(value: any): value is T[] {\n  return Array.isArray(value);\n}\n\nexport function isDate(date: any): date is Date {\n  return _toString.call(date) === '[object Date]';\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction<T extends Function>(value: any): value is T {\n  return typeof value === 'function';\n}\n","export function assert(condition: boolean, msg: string) {\n  if (!condition) {\n    throwError(msg);\n  }\n}\n\nexport function throwError(msg: string): void {\n  throw new Error(`[axios-miniprogram]: ${msg}`);\n}\n","import { isPlainObject } from './types';\n\nexport function ensureObject(value?: any) {\n  return isPlainObject(value) ? value : {};\n}\n","import { AxiosRequestData } from '../core/Axios';\nimport { ensureObject } from './ensureObject';\n\nconst dynamicRE = /\\/:([^/?]+)/g;\nexport function dynamicURL(\n  url: string,\n  params: AnyObject = {},\n  data: AxiosRequestData = {},\n) {\n  const dataObject = ensureObject(data);\n  return url.replace(dynamicRE, (_, $2) => {\n    const value = params[$2] ?? dataObject[$2];\n    if ($2 in params) {\n      delete params[$2];\n    }\n    return `/${value}`;\n  });\n}\n","import { isPlainObject } from './types';\n\nexport function deepMerge<T extends AnyObject>(...objs: (T | undefined)[]): T {\n  const result: AnyObject = {};\n\n  for (const obj of objs.filter(isPlainObject) as T[]) {\n    for (const [key, val] of Object.entries(obj)) {\n      if (isPlainObject(val)) {\n        const rVal = result[key];\n        result[key] = isPlainObject(rVal)\n          ? deepMerge(rVal, val)\n          : deepMerge(val);\n      } else {\n        result[key] = val;\n      }\n    }\n  }\n\n  return result as T;\n}\n","/**\n * 忽略键值对\n *\n * @param obj 源对象\n * @param keys 忽略的键\n */\nexport function ignore<T extends AnyObject, K extends keyof T>(\n  obj: T,\n  ...keys: K[]\n): Omit<T, K> {\n  const res = { ...obj };\n  orgIgnore(res, keys);\n  return res;\n}\n\n/**\n * 从源对象删除键值对\n *\n * @param obj 源对象\n * @param keys 忽略的键\n */\nexport function orgIgnore(obj: AnyObject, keys: PropertyKey[]) {\n  for (const key of keys) {\n    delete obj[key as string | number];\n  }\n}\n","import {\n  PLAIN_METHODS,\n  WITH_DATA_METHODS,\n  WITH_PARAMS_METHODS,\n} from '../constants/methods';\nimport { deepMerge } from '../helpers/deepMerge';\nimport { ignore } from '../helpers/ignore';\nimport { AxiosRequestConfig, AxiosRequestHeaders } from '../core/Axios';\n\n/**\n * 通用请求头键\n */\nconst commonKey = 'common';\n/**\n * 需要忽略的键\n */\nconst ignoreKeys = [commonKey].concat(\n  PLAIN_METHODS,\n  WITH_PARAMS_METHODS,\n  WITH_DATA_METHODS,\n);\n\nexport function flattenHeaders(\n  config: AxiosRequestConfig,\n): AxiosRequestHeaders {\n  const headers = config.headers ?? {};\n  const mergedHeaders = deepMerge(\n    headers[commonKey],\n    headers[config.method!],\n    headers,\n  );\n  return ignore(mergedHeaders, ...ignoreKeys);\n}\n","import { isArray, isFunction } from '../helpers/types';\n\nexport interface AxiosTransformCallback<TData = unknown> {\n  (\n    /**\n     * 数据\n     */\n    data?: TData,\n    /**\n     * 头信息\n     */\n    headers?: AnyObject,\n  ): TData | undefined;\n}\n\nexport type AxiosTransformer<TData = unknown> =\n  | AxiosTransformCallback<TData>\n  | AxiosTransformCallback<TData>[];\n\nexport function transformData<TData = unknown>(\n  data?: TData,\n  headers?: AnyObject,\n  transforms?: AxiosTransformer<TData>,\n) {\n  if (!isArray(transforms)) {\n    if (isFunction(transforms)) {\n      transforms = [transforms];\n    } else {\n      transforms = [];\n    }\n  }\n\n  transforms.forEach((transform) => {\n    data = transform(data, headers);\n  });\n\n  return data as TData;\n}\n","import { isArray, isDate, isNull, isPlainObject, isUndefined } from './types';\n\nexport function buildURL(\n  url = '',\n  params: AnyObject = {},\n  paramsSerializer = defaultSerializer,\n): string {\n  const paramsStr = paramsSerializer(params);\n  if (paramsStr) {\n    url = `${url}${url.indexOf('?') === -1 ? '?' : '&'}${paramsStr}`;\n  }\n  return url;\n}\n\nfunction defaultSerializer(params: AnyObject): string {\n  const parts: string[] = [];\n\n  function push(key: string, value: string) {\n    parts.push(`${encode(key)}=${encode(value)}`);\n  }\n\n  for (const [key, val] of Object.entries(params)) {\n    if (!isNull(val) && !isUndefined(val) && val === val) {\n      if (isPlainObject(val)) {\n        for (const [k, v] of Object.entries(val)) push(`${key}[${k}]`, v);\n      } else if (isArray<string>(val)) {\n        const k = `${key}[]`;\n        for (const v of val) push(k, v);\n      } else if (isDate(val)) {\n        push(key, val.toISOString());\n      } else {\n        push(key, val);\n      }\n    }\n  }\n\n  return parts.join('&');\n}\n\nfunction encode(str: string): string {\n  return encodeURIComponent(str)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']');\n}\n","const absoluteRE = /^([a-z][\\w-.]*:)\\/\\//i;\nexport function isAbsoluteURL(url: string): boolean {\n  return absoluteRE.test(url);\n}\n","import { isAbsoluteURL } from './isAbsoluteURL';\n\nexport function combineURL(baseURL = '', url = ''): string {\n  if (!url) return baseURL;\n  if (isAbsoluteURL(url)) return url;\n  return `${baseURL.replace(/\\/+$/, '')}/${url.replace(/^\\/+/, '')}`;\n}\n","import { AxiosRequestConfig } from '../core/Axios';\nimport { buildURL } from './buildURL';\nimport { combineURL } from './combineURL';\n\nexport function transformURL(config: AxiosRequestConfig) {\n  const fullPath = combineURL(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n}\n","const httpStatusCodes = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  102: 'Processing',\n  103: 'Early Hints',\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  207: 'Multi-Status',\n  208: 'Already Reported',\n  226: 'IM Used',\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified',\n  307: 'Temporary Redirect',\n  308: 'Permanent Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Content Too Large',\n  414: 'URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Range Not Satisfiable',\n  417: 'Expectation Failed',\n  418: \"I'm a teapot\",\n  421: 'Misdirected Request',\n  422: 'Unprocessable Content',\n  423: 'Locked',\n  424: 'Failed Dependency',\n  425: 'Too Early',\n  426: 'Upgrade Required',\n  428: 'Precondition Required',\n  429: 'Too Many Requests',\n  431: 'Request Header Fields Too Large',\n  451: 'Unavailable For Legal Reasons',\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported',\n  506: 'Variant Also Negotiates',\n  507: 'Insufficient Storage',\n  508: 'Loop Detected',\n  510: 'Not Extended',\n  511: 'Network Authentication Required',\n} as const;\n\nexport function getHttpStatusText(status: number) {\n  // @ts-ignore\n  return httpStatusCodes[status] || 'Unknown';\n}\n","import { AxiosRequestConfig } from '../core/Axios';\nimport { AxiosAdapterRequestType } from '../adpater/createAdapter';\n\nexport function generateType(config: AxiosRequestConfig) {\n  let requestType: AxiosAdapterRequestType = 'request';\n\n  if (config.download && /^GET/i.test(config.method!)) {\n    requestType = 'download';\n  } else if (config.upload && /^POST/i.test(config.method!)) {\n    requestType = 'upload';\n  }\n\n  return requestType;\n}\n","import { isFunction, isPlainObject } from '../helpers/types';\nimport { transformURL } from '../helpers/transformURL';\nimport { getHttpStatusText } from '../helpers/getHttpStatusText';\nimport {\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosResponseError,\n} from '../core/Axios';\nimport {\n  AxiosAdapterRequestConfig,\n  AxiosAdapterResponse,\n  AxiosAdapterResponseError,\n  AxiosAdapterPlatformTask,\n  AxiosAdapterRequestMethod,\n} from '../adpater/createAdapter';\nimport { isCancelToken } from './cancel';\nimport { AxiosErrorResponse, createError } from './createError';\nimport { generateType } from './generateType';\n\n/**\n * 开始请求\n *\n * 创建适配器配置并调用适配器，监听取消请求，注册监听回调，处理响应体和错误体，抛出异常。\n *\n * @param config 请求配置\n */\nexport function request(config: AxiosRequestConfig) {\n  return new Promise<AxiosResponse>((resolve, reject) => {\n    const adapterConfig: AxiosAdapterRequestConfig = {\n      ...(config as AxiosAdapterRequestConfig),\n      type: generateType(config),\n      url: transformURL(config),\n      method: config.method!.toUpperCase() as AxiosAdapterRequestMethod,\n      success,\n      fail,\n    };\n\n    let adapterTask: AxiosAdapterPlatformTask;\n    try {\n      adapterTask = config.adapter!(adapterConfig);\n    } catch (err) {\n      fail({\n        status: 400,\n        statusText: 'Bad Adapter',\n      });\n\n      console.error(err);\n    }\n\n    function success(rawResponse: AxiosAdapterResponse): void {\n      const response = rawResponse as AxiosResponse;\n      response.status ||= 200;\n      response.statusText ||= getHttpStatusText(response.status);\n      response.headers ||= {};\n      response.config = config;\n      response.request = adapterTask;\n\n      const { validateStatus } = config;\n      if (!isFunction(validateStatus) || validateStatus(response.status)) {\n        resolve(response);\n      } else {\n        catchError('validate status error', response);\n      }\n    }\n\n    function fail(rawResponseError: AxiosAdapterResponseError): void {\n      const responseError = rawResponseError as AxiosResponseError;\n      responseError.isFail = true;\n      responseError.status ||= 400;\n      responseError.statusText ||= getHttpStatusText(responseError.status);\n      responseError.headers ||= {};\n      responseError.config = config;\n      responseError.request = adapterTask;\n\n      catchError('request fail', responseError);\n    }\n\n    function catchError(\n      message: string,\n      errorResponse: AxiosErrorResponse,\n    ): void {\n      reject(createError(message, config, errorResponse, adapterTask));\n    }\n\n    if (isPlainObject(adapterTask)) {\n      tryToggleProgressUpdate(adapterConfig, adapterTask.onProgressUpdate);\n    }\n\n    const { cancelToken } = config;\n    if (isCancelToken(cancelToken)) {\n      cancelToken.onCancel((reason) => {\n        if (isPlainObject(adapterTask)) {\n          tryToggleProgressUpdate(adapterConfig, adapterTask.offProgressUpdate);\n\n          if (isFunction(adapterTask.abort)) {\n            adapterTask.abort();\n          }\n        }\n\n        reject(reason);\n      });\n    }\n  });\n}\n\nfunction tryToggleProgressUpdate(\n  config: AxiosAdapterRequestConfig,\n  toggle?: (cb: (event: AnyObject) => void) => void,\n) {\n  if (isFunction(toggle)) {\n    const { type, onUploadProgress, onDownloadProgress } = config;\n    switch (type) {\n      case 'upload':\n        if (isFunction(onUploadProgress)) {\n          toggle(onUploadProgress);\n        }\n        break;\n      case 'download':\n        if (isFunction(onDownloadProgress)) {\n          toggle(onDownloadProgress);\n        }\n        break;\n    }\n  }\n}\n","import { WITH_DATA_RE } from '../constants/methods';\nimport { isFunction, isString } from '../helpers/types';\nimport { assert } from '../helpers/error';\nimport { dynamicURL } from '../helpers/dynamicURL';\nimport { AxiosRequestConfig, AxiosResponse } from '../core/Axios';\nimport { Cancel, isCancel, isCancelToken } from './cancel';\nimport { flattenHeaders } from './flattenHeaders';\nimport { AxiosTransformer, transformData } from './transformData';\nimport { request } from './request';\nimport { AxiosErrorResponse } from './createError';\n\n/**\n * 发送请求\n *\n * 校验配置，转换配置，转换数据，捕获取消请求。\n *\n * @param config 请求配置\n */\nexport function dispatchRequest(config: AxiosRequestConfig) {\n  throwIfCancellationRequested(config);\n\n  assert(isFunction(config.adapter), 'adapter 不是一个 function');\n  assert(isString(config.url), 'url 不是一个 string');\n  assert(isString(config.method), 'method 不是一个 string');\n\n  config.url = dynamicURL(config.url!, config.params, config.data);\n  config.headers = flattenHeaders(config);\n\n  // 可以携带 data 的请求方法，转换 data\n  // 否则，删除 data\n  if (WITH_DATA_RE.test(config.method!)) {\n    dataTransformer(config, config.transformRequest);\n  } else {\n    delete config.data;\n  }\n\n  function onSuccess(response: AxiosResponse) {\n    throwIfCancellationRequested(config);\n    dataTransformer(response, config.transformResponse);\n\n    return response;\n  }\n\n  function onError(error: Cancel | AxiosErrorResponse) {\n    if (!isCancel(error)) {\n      throwIfCancellationRequested(config);\n      dataTransformer(error.response, config.transformResponse);\n    }\n\n    return Promise.reject(error);\n  }\n\n  function dataTransformer<TData = unknown>(\n    obj: { data?: TData; headers?: AnyObject },\n    fn?: AxiosTransformer<TData>,\n  ) {\n    obj.data = transformData(obj.data, obj.headers, fn);\n  }\n\n  return request(config).then(onSuccess, onError);\n}\n\nfunction throwIfCancellationRequested(config: AxiosRequestConfig) {\n  const { cancelToken } = config;\n  if (isCancelToken(cancelToken)) {\n    cancelToken.throwIfRequested();\n  }\n}\n","export interface InterceptorResolved<T = unknown> {\n  (value: T): T | Promise<T>;\n}\n\nexport interface InterceptorRejected<T = unknown> {\n  (error: unknown): T | Promise<T>;\n}\n\n/**\n * 拦截器\n */\nexport interface Interceptor<T = unknown> {\n  /**\n   * 成功的回调\n   */\n  resolved: InterceptorResolved<T>;\n  /**\n   * 失败的回调\n   */\n  rejected?: InterceptorRejected<T>;\n}\n\nexport interface InterceptorExecutor<T = unknown> {\n  (interceptor: Interceptor<T>): void;\n}\n\n/**\n * 拦截器管理器\n */\nexport default class InterceptorManager<T = unknown> {\n  /**\n   * @internal\n   *\n   * 生成拦截器标识符\n   */\n  private id = 0;\n\n  /**\n   * @internal\n   *\n   * 拦截器缓存池\n   */\n  private interceptors = new Map<number, Interceptor<T>>();\n\n  /**\n   * @internal\n   *\n   * 拦截器数量\n   */\n  get size() {\n    return this.interceptors.size;\n  }\n\n  /**\n   * 添加拦截器\n   *\n   * @param resolved 成功的回调\n   * @param rejected 失败的回调\n   * @returns 拦截器标识符（可用于移除拦截器）\n   */\n  use(\n    resolved: InterceptorResolved<T>,\n    rejected?: InterceptorRejected<T>,\n  ): number {\n    this.interceptors.set(++this.id, {\n      resolved,\n      rejected,\n    });\n\n    return this.id;\n  }\n\n  /**\n   * 移除拦截器\n   *\n   * @param id 拦截器标识符\n   */\n  eject(id: number): boolean {\n    return this.interceptors.delete(id);\n  }\n\n  /**\n   * 清空拦截器\n   */\n  clear() {\n    this.interceptors.clear();\n  }\n\n  /**\n   * @internal\n   *\n   * 遍历拦截器\n   *\n   * @param executor 执行器\n   */\n  forEach(executor: InterceptorExecutor<T>): void {\n    this.interceptors.forEach(executor);\n  }\n}\n","import { assert } from '../helpers/error';\nimport { isFunction } from '../helpers/types';\nimport { AxiosRequestConfig, AxiosResponse } from './Axios';\n\nexport interface MiddlewareNext {\n  (): Promise<void>;\n}\n\n/**\n * 中间件上下文\n */\nexport interface MiddlewareContext {\n  /**\n   * 请求体\n   *\n   * 同于请求配置\n   */\n  req: AxiosRequestConfig;\n  /**\n   * 响应体\n   */\n  res: null | AxiosResponse;\n}\n\n/**\n * 中间件\n */\nexport interface MiddlewareCallback {\n  (ctx: MiddlewareContext, next: MiddlewareNext): Promise<void>;\n}\n\n/**\n * 中间件管理器\n */\nexport default class MiddlewareManager {\n  /**\n   * @internal\n   *\n   * 中间件缓存池\n   */\n  private middlewares: MiddlewareCallback[] = [];\n\n  /**\n   * 注册中间件\n   */\n  use(middleware: MiddlewareCallback) {\n    assert(isFunction(middleware), 'middleware 不是一个 function');\n    this.middlewares.push(middleware);\n  }\n\n  /**\n   * @internal\n   *\n   * 创建中间件上下文\n   */\n  createContext(config: AxiosRequestConfig): MiddlewareContext {\n    return {\n      req: config,\n      res: null,\n    };\n  }\n\n  /**\n   * @internal\n   *\n   * 运行中间件\n   *\n   * @param ctx 中间件上下文\n   * @param respond 目标函数\n   */\n  run(ctx: MiddlewareContext, respond: MiddlewareCallback) {\n    const middlewares = [...this.middlewares, respond];\n    async function next() {\n      await middlewares.shift()!(ctx, next);\n    }\n    return next();\n  }\n\n  /**\n   * @internal\n   *\n   * 强化运行中间件\n   *\n   * @param enhancer 强化器\n   */\n  enhanceRun(enhancer: MiddlewareManager['run']): MiddlewareManager['run'] {\n    return (ctx, respond) => {\n      return enhancer(ctx, () => this.run(ctx, respond));\n    };\n  }\n}\n","import { isUndefined, isPlainObject } from '../helpers/types';\nimport { deepMerge } from '../helpers/deepMerge';\nimport { AxiosRequestConfig } from './Axios';\n\nconst fromConfig2Map: Record<string, boolean> = {\n  url: true,\n  data: true,\n  upload: true,\n  download: true,\n};\nconst deepMergeConfigMap: Record<string, boolean> = {\n  headers: true,\n  params: true,\n};\n\n/**\n * 合并配置\n *\n * 按照设定的优先级进行合并\n */\nexport function mergeConfig(\n  config1: AxiosRequestConfig = {},\n  config2: AxiosRequestConfig = {},\n) {\n  const config: AxiosRequestConfig = {};\n\n  // 所有已知键名\n  const keysSet = Array.from(\n    new Set([...Object.keys(config1), ...Object.keys(config2)]),\n  );\n\n  for (const key of keysSet) {\n    const val1 = config1[key];\n    const val2 = config2[key];\n\n    // 只从 config2 中取值\n    if (fromConfig2Map[key]) {\n      if (!isUndefined(val2)) config[key] = val2;\n    }\n    // 深度合并 config1 和 config2 中的对象\n    else if (deepMergeConfigMap[key]) {\n      if (isPlainObject(val1)) {\n        config[key] = deepMerge(val1, isPlainObject(val2) ? val2 : {});\n      } else if (isPlainObject(val2)) {\n        config[key] = deepMerge(val2, {});\n      }\n    }\n    // 优先从 config2 中取值，如果没有值就从 config1 中取值\n    else {\n      if (!isUndefined(val2)) {\n        config[key] = val2;\n      } else if (!isUndefined(val1)) {\n        config[key] = val1;\n      }\n    }\n  }\n\n  return config;\n}\n","import {\n  PLAIN_METHODS,\n  WITH_DATA_METHODS,\n  WITH_PARAMS_METHODS,\n} from '../constants/methods';\nimport { isString } from '../helpers/types';\nimport { dispatchRequest } from '../request/dispatchRequest';\nimport { CancelToken } from '../request/cancel';\nimport { AxiosTransformer } from '../request/transformData';\nimport { deepMerge } from '../helpers/deepMerge';\nimport {\n  AxiosAdapter,\n  AxiosAdapterRequestMethod,\n  AxiosAdapterPlatformTask,\n  AxiosAdapterRequestConfig,\n  AxiosAdapterResponseData,\n} from '../adpater/createAdapter';\nimport InterceptorManager, {\n  Interceptor,\n  InterceptorExecutor,\n} from './InterceptorManager';\nimport MiddlewareManager, {\n  MiddlewareCallback,\n  MiddlewareContext,\n} from './MiddlewareManager';\nimport { mergeConfig } from './mergeConfig';\n\n/**\n * 请求方法\n */\nexport type AxiosRequestMethod =\n  | AxiosAdapterRequestMethod\n  | 'options'\n  | 'get'\n  | 'head'\n  | 'post'\n  | 'put'\n  | 'patch'\n  | 'delete'\n  | 'trace'\n  | 'connect';\n\n/**\n * 请求头\n */\nexport interface AxiosRequestHeaders extends AnyObject {\n  /**\n   * 通用请求头\n   */\n  common?: AnyObject;\n  /**\n   * options 请求头\n   */\n  options?: AnyObject;\n  /**\n   * get 请求头\n   */\n  get?: AnyObject;\n  /**\n   * head 请求头\n   */\n  head?: AnyObject;\n  /**\n   * post 请求头\n   */\n  post?: AnyObject;\n  /**\n   * put 请求头\n   */\n  put?: AnyObject;\n  /**\n   * delete 请求头\n   */\n  delete?: AnyObject;\n  /**\n   * trace 请求头\n   */\n  trace?: AnyObject;\n  /**\n   * connect 请求头\n   */\n  connect?: AnyObject;\n}\n\n/**\n * 表单数据（上传会用到）\n */\nexport interface AxiosRequestFormData extends AnyObject {\n  /**\n   * 文件名\n   */\n  name: string;\n  /**\n   * 文件路径\n   */\n  filePath: string;\n}\n\n/**\n * 请求数据\n */\nexport type AxiosRequestData =\n  | string\n  | AnyObject\n  | ArrayBuffer\n  | AxiosRequestFormData;\n\n/**\n * 响应数据\n */\nexport type AxiosResponseData = number | AxiosAdapterResponseData;\n\n/**\n * 进度对象\n */\nexport interface AxiosProgressEvent extends AnyObject {\n  /**\n   * 上传进度百分比\n   */\n  progress: number;\n}\n\n/**\n * 下载进度对象\n */\nexport interface AxiosDownloadProgressEvent extends AxiosProgressEvent {\n  /**\n   * 已经下载的数据长度，单位 Bytes\n   */\n  totalBytesWritten: number;\n  /**\n   * 预预期需要下载的数据总长度，单位 Bytes\n   */\n  totalBytesExpectedToWrite: number;\n}\n\n/**\n * 监听下载进度\n */\nexport interface AxiosDownloadProgressCallback {\n  (event: AxiosDownloadProgressEvent): void;\n}\n\n/**\n * 上传进度对象\n */\nexport interface AxiosUploadProgressEvent extends AxiosProgressEvent {\n  /**\n   * 已经上传的数据长度，单位 Bytes\n   */\n  totalBytesSent: number;\n  /**\n   * 预期需要上传的数据总长度，单位 Bytes\n   */\n  totalBytesExpectedToSend: number;\n}\n\n/**\n * 监听上传进度\n */\nexport interface AxiosUploadProgressCallback {\n  (event: AxiosUploadProgressEvent): void;\n}\n\n/**\n * 请求配置\n */\nexport interface AxiosRequestConfig\n  extends Partial<\n    Omit<AxiosAdapterRequestConfig, 'type' | 'success' | 'fail'>\n  > {\n  /**\n   * 请求适配器\n   */\n  adapter?: AxiosAdapter;\n  /**\n   * 基础路径\n   */\n  baseURL?: string;\n  /**\n   * 请求的 URL\n   */\n  url?: string;\n  /**\n   * 请求参数\n   */\n  params?: AnyObject;\n  /**\n   * 请求数据\n   */\n  data?: AxiosRequestData;\n  /**\n   * 请求头\n   */\n  headers?: AxiosRequestHeaders;\n  /**\n   * 请求方法\n   */\n  method?: AxiosRequestMethod;\n  /**\n   * 取消令牌\n   */\n  cancelToken?: CancelToken;\n  /**\n   * 下载文件\n   */\n  download?: boolean;\n  /**\n   * 上传文件\n   */\n  upload?: boolean;\n  /**\n   * 请求参数系列化函数\n   */\n  paramsSerializer?: (params?: AnyObject) => string;\n  /**\n   * 校验状态码\n   */\n  validateStatus?: (status: number) => boolean;\n  /**\n   * 转换请求数据\n   */\n  transformRequest?: AxiosTransformer<AxiosRequestData>;\n  /**\n   * 转换响应数据\n   */\n  transformResponse?: AxiosTransformer<AxiosResponseData>;\n  /**\n   * 错误处理\n   */\n  errorHandler?: (error: unknown) => Promise<AxiosResponse>;\n  /**\n   * 监听下载进度\n   */\n  onDownloadProgress?: AxiosUploadProgressCallback;\n  /**\n   * 监听上传进度\n   */\n  onUploadProgress?: AxiosUploadProgressCallback;\n}\n\n/**\n * 响应体\n */\nexport interface AxiosResponse<\n  TData extends AxiosResponseData = AxiosResponseData,\n> extends AnyObject {\n  /**\n   * 状态码\n   */\n  status: number;\n  /**\n   * 状态字符\n   */\n  statusText: string;\n  /**\n   * 响应头\n   */\n  headers: AnyObject;\n  /**\n   * 响应数据\n   */\n  data: TData;\n  /**\n   * 请求配置\n   */\n  config: AxiosRequestConfig;\n  /**\n   * 请求任务\n   */\n  request?: AxiosAdapterPlatformTask;\n}\n\n/**\n * 错误体\n */\nexport interface AxiosResponseError extends AnyObject {\n  /**\n   * 状态码\n   */\n  status: number;\n  /**\n   * 状态字符\n   */\n  statusText: string;\n  /**\n   * 响应头\n   */\n  headers: AnyObject;\n  /**\n   * 错误数据\n   */\n  data: AnyObject;\n  /**\n   * 失败的请求，指没能够成功响应的请求\n   */\n  isFail: true;\n  /**\n   * 请求配置\n   */\n  config: AxiosRequestConfig;\n  /**\n   * 请求任务\n   */\n  request?: AxiosAdapterPlatformTask;\n}\n\nexport interface AxiosRequest {\n  <TData extends AxiosResponseData>(config: AxiosRequestConfig): Promise<\n    AxiosResponse<TData>\n  >;\n  <TData extends AxiosResponseData>(\n    url: string,\n    config?: AxiosRequestConfig,\n  ): Promise<AxiosResponse<TData>>;\n}\n\n/**\n * 普通的请求方法\n */\nexport type AxiosRequestMethodFn = <TData extends AxiosResponseData>(\n  url: string,\n  config?: AxiosRequestConfig,\n) => Promise<AxiosResponse<TData>>;\n\n/**\n * 带参数的请求方法\n */\nexport type AxiosRequestMethodFnWithParams = <TData extends AxiosResponseData>(\n  url: string,\n  params?: AnyObject,\n  config?: AxiosRequestConfig,\n) => Promise<AxiosResponse<TData>>;\n\n/**\n * 带数据的请求方法\n */\nexport type AxiosRequestMethodFnWithData = <TData extends AxiosResponseData>(\n  url: string,\n  data?: AxiosRequestData,\n  config?: AxiosRequestConfig,\n) => Promise<AxiosResponse<TData>>;\n\nexport interface AxiosDomainRequestHandler {\n  (config: AxiosRequestConfig): Promise<AxiosResponse>;\n}\n\n/**\n * Axios 构造函数\n */\nexport interface AxiosConstructor {\n  new (config: AxiosRequestConfig): Axios;\n}\n\nexport default class Axios {\n  /**\n   * @internal\n   *\n   * 父级实例\n   */\n  private declare parent?: Axios;\n\n  /**\n   * 默认请求配置\n   */\n  declare defaults: AxiosRequestConfig;\n\n  /**\n   * 拦截器\n   */\n  interceptors = {\n    /**\n     * 请求拦截器\n     */\n    request: new InterceptorManager<AxiosRequestConfig>(),\n    /**\n     * 响应拦截器\n     */\n    response: new InterceptorManager<AxiosResponse>(),\n  };\n\n  /**\n   * @internal\n   *\n   * 中间件\n   */\n  private middleware = new MiddlewareManager();\n\n  /**\n   * 发送 options 请求\n   */\n  declare options: AxiosRequestMethodFn;\n\n  /**\n   * 发送 get 请求\n   */\n  declare get: AxiosRequestMethodFnWithParams;\n\n  /**\n   * 发送 head 请求\n   */\n  declare head: AxiosRequestMethodFnWithParams;\n\n  /**\n   * 发送 post 请求\n   */\n  declare post: AxiosRequestMethodFnWithData;\n\n  /**\n   * 发送 put 请求\n   */\n  declare put: AxiosRequestMethodFnWithData;\n\n  /**\n   * 发送 patch 请求\n   */\n  declare patch: AxiosRequestMethodFnWithData;\n\n  /**\n   * 发送 delete 请求\n   */\n  declare delete: AxiosRequestMethodFnWithParams;\n\n  /**\n   * 发送 trace 请求\n   */\n  declare trace: AxiosRequestMethodFn;\n\n  /**\n   * 发送 connect 请求\n   */\n  declare connect: AxiosRequestMethodFn;\n\n  /**\n   * @param config 默认配置\n   * @param parent 父级实例\n   */\n  constructor(config: AxiosRequestConfig, parent?: Axios) {\n    this.defaults = config;\n    this.parent = parent;\n  }\n\n  /**\n   * 发送请求\n   */\n  request: AxiosRequest = (\n    urlOrConfig: string | AxiosRequestConfig,\n    config: AxiosRequestConfig = {},\n  ) => {\n    if (isString(urlOrConfig)) {\n      config.url = urlOrConfig;\n    } else {\n      config = urlOrConfig;\n    }\n    config = mergeConfig(this.defaults, config);\n    config.method = (config.method?.toLowerCase() ??\n      'get') as AxiosRequestMethod;\n\n    const requestHandler = {\n      resolved: this.handleRequest,\n    };\n    const errorHandler = {\n      rejected: config.errorHandler,\n    };\n    const chain: (\n      | Partial<Interceptor<AxiosRequestConfig>>\n      | Partial<Interceptor<AxiosResponse>>\n    )[] = [];\n\n    this.eachInterceptors('request', (interceptor) => {\n      chain.unshift(interceptor);\n    });\n    chain.push(requestHandler);\n    this.eachInterceptors('response', (interceptor) => {\n      chain.push(interceptor);\n    });\n    chain.push(errorHandler);\n\n    return chain.reduce(\n      (next, { resolved, rejected }) =>\n        next.then(\n          // @ts-ignore\n          resolved,\n          rejected,\n        ),\n      Promise.resolve(config),\n    ) as Promise<AxiosResponse>;\n  };\n\n  /**\n   * @internal\n   */\n  private eachInterceptors<T extends 'request' | 'response'>(\n    type: T,\n    executor: InterceptorExecutor<\n      T extends 'request' ? AxiosRequestConfig : AxiosResponse\n    >,\n  ) {\n    // @ts-ignore\n    this.interceptors[type].forEach(executor);\n    if (this.parent) {\n      this.parent.eachInterceptors(type, executor);\n    }\n  }\n\n  /**\n   * 注册中间件\n   *\n   * 示例1：注册一个中间件\n   * ```ts\n   * axios.use(async function middleware(ctx, next) {\n   *   console.log(ctx.req);\n   *   await next();\n   *   console.log(ctx.res);\n   * });\n   * ```\n   *\n   * 示例2：链式注册多个中间件\n   * ```ts\n   * axios\n   *  .use(async function middleware1(ctx, next) {\n   *    console.log(ctx.req);\n   *    await next();\n   *    console.log(ctx.res);\n   *  })\n   *  .use(async function middleware2(ctx, next) {\n   *    console.log(ctx.req);\n   *    await next();\n   *    console.log(ctx.res);\n   *  });\n   * ```\n   */\n  use = (middleware: MiddlewareCallback) => {\n    this.middleware.use(middleware);\n    return this;\n  };\n\n  /**\n   * @internal\n   */\n  private handleRequest = async (config: AxiosRequestConfig) => {\n    const ctx = this.middleware.createContext(config);\n    await this.run(ctx, this.handleResponse);\n    return ctx.res as AxiosResponse;\n  };\n\n  /**\n   * @internal\n   */\n  private async handleResponse(ctx: MiddlewareContext) {\n    ctx.res = await dispatchRequest(ctx.req);\n  }\n\n  /**\n   * @internal\n   */\n  private run = (\n    ctx: MiddlewareContext,\n    respond: MiddlewareCallback,\n  ): Promise<void> => {\n    if (!this.parent) {\n      return this.middleware.run(ctx, respond);\n    }\n    return this.middleware.enhanceRun(this.parent.run)(ctx, respond);\n  };\n}\n\nfor (const method of PLAIN_METHODS) {\n  Axios.prototype[method] = function processRequestMethod(url, config = {}) {\n    config.method = method;\n    return this.request(url, config);\n  };\n}\n\nfor (const method of WITH_PARAMS_METHODS) {\n  Axios.prototype[method] = function processRequestMethodWithParams(\n    url,\n    params,\n    config = {},\n  ) {\n    config.method = method;\n    config.params = deepMerge(params, config.params);\n    return this.request(url, config);\n  };\n}\n\nfor (const method of WITH_DATA_METHODS) {\n  Axios.prototype[method] = function processRequestMethodWithData(\n    url,\n    data,\n    config = {},\n  ) {\n    config.method = method;\n    config.data = data;\n    return this.request(url, config);\n  };\n}\n","import { dynamicURL } from '../helpers/dynamicURL';\nimport { combineURL } from '../helpers/combineURL';\nimport { transformURL } from '../helpers/transformURL';\nimport Axios, {\n  AxiosRequest,\n  AxiosRequestConfig,\n  AxiosRequestHeaders,\n} from './Axios';\nimport { mergeConfig } from './mergeConfig';\n\n/**\n * axios 实例默认配置\n */\nexport interface AxiosInstanceDefaults extends AxiosRequestConfig {\n  /**\n   * 请求头\n   */\n  headers: Required<AxiosRequestHeaders>;\n}\n\n/**\n * axios 实例\n */\nexport interface AxiosInstance extends AxiosRequest, Axios {\n  /**\n   * 默认请求配置\n   */\n  defaults: AxiosInstanceDefaults;\n  /**\n   * 获取 URI\n   *\n   * @param config 配置\n   */\n  getUri(config: AxiosRequestConfig): string;\n  /**\n   * 创建实例\n   *\n   * @param config 默认配置\n   */\n  create(config?: AxiosRequestConfig): AxiosInstance;\n  /**\n   * 扩展实例\n   *\n   * @param config 默认配置\n   */\n  extend(config: AxiosRequestConfig): AxiosInstance;\n}\n\nexport function createInstance(\n  defaults: AxiosRequestConfig,\n  parentContext?: Axios,\n) {\n  const context = new Axios(defaults, parentContext);\n  const instance = context.request as AxiosInstance;\n\n  instance.getUri = function getUri(config) {\n    config.url = dynamicURL(config.url!, config.params, config.data);\n    return transformURL(mergeConfig(defaults, config));\n  };\n  instance.create = function create(config) {\n    return createInstance(mergeConfig(defaults, config));\n  };\n  instance.extend = function extend(config) {\n    config.baseURL = combineURL(defaults.baseURL, config.baseURL);\n    return createInstance(mergeConfig(defaults, config), context);\n  };\n\n  Object.assign(instance, context);\n  Object.setPrototypeOf(instance, Axios.prototype);\n\n  return instance;\n}\n","import { isFunction, isPlainObject } from '../helpers/types';\nimport { assert } from '../helpers/error';\nimport { ignore, orgIgnore } from '../helpers/ignore';\nimport {\n  AxiosProgressEvent,\n  AxiosRequestFormData,\n  AxiosRequestHeaders,\n} from '../core/Axios';\n\n/**\n * 适配器请求类型\n */\nexport type AxiosAdapterRequestType = 'request' | 'download' | 'upload';\n\n/**\n * 适配器请求方法\n */\nexport type AxiosAdapterRequestMethod =\n  | 'OPTIONS'\n  | 'GET'\n  | 'HEAD'\n  | 'POST'\n  | 'PUT'\n  | 'PATCH'\n  | 'DELETE'\n  | 'TRACE'\n  | 'CONNECT';\n\n/**\n * 适配器请求数据\n */\nexport type AxiosAdapterRequestData = string | AnyObject | ArrayBuffer;\n\n/**\n * 适配器响应数据\n */\nexport type AxiosAdapterResponseData = string | ArrayBuffer | AnyObject;\n\n/**\n * 适配器响应体\n */\nexport interface AxiosAdapterResponse extends AnyObject {\n  /**\n   * 状态码\n   */\n  status?: number;\n  /**\n   * 响应头\n   */\n  headers?: AnyObject;\n  /**\n   * 响应数据\n   */\n  data: AxiosAdapterResponseData;\n}\n\n/**\n * 适配器错误体\n */\nexport interface AxiosAdapterResponseError extends AnyObject {\n  /**\n   * 状态码\n   */\n  status?: number;\n  /**\n   * 响应头\n   */\n  headers?: AnyObject;\n  /**\n   * 错误数据\n   */\n  data?: AnyObject;\n}\n\n/**\n * 适配器请求配置\n */\nexport interface AxiosAdapterRequestConfig extends AnyObject {\n  /**\n   * 请求类型\n   */\n  type: 'request' | 'upload' | 'download';\n  /**\n   * 开发者服务器接口地址\n   */\n  url: string;\n  /**\n   * HTTP 请求方法\n   */\n  method: AxiosAdapterRequestMethod;\n  /**\n   * 请求参数\n   */\n  params?: AnyObject;\n  /**\n   * 请求数据\n   */\n  data?: AxiosAdapterRequestData;\n  /**\n   * 请求头\n   */\n  headers?: AnyObject;\n  /**\n   * 返回的数据格式\n   */\n  dataType?: string;\n  /**\n   * 响应的数据类型\n   */\n  responseType?: string;\n  /**\n   * 超时时间，单位为毫秒。默认值为 60000\n   */\n  timeout?: number;\n  /**\n   * 成功的回调\n   */\n  success(response: AxiosAdapterResponse): void;\n  /**\n   * 失败的回调\n   */\n  fail(error: AxiosAdapterResponseError): void;\n}\n\n/**\n * 请求函数基本选项\n */\nexport interface AxiosAdapterBaseOptions extends AxiosAdapterRequestConfig {\n  /**\n   * 请求头，同 headers\n   */\n  header?: AxiosRequestHeaders;\n  /**\n   * 成功的回调\n   */\n  success(response: AnyObject): void;\n  /**\n   * 失败的回调\n   */\n  fail(error: AnyObject): void;\n}\n\n/**\n * 请求函数选项\n */\nexport type AxiosAdapterRequestOptions = AxiosAdapterBaseOptions;\n\n/**\n * 下载函数选项\n */\nexport interface AxiosAdapterDownloadOptions extends AxiosAdapterBaseOptions {\n  /**\n   * 文件下载后存储的路径\n   */\n  filePath?: string;\n}\n\n/**\n * 上传函数选项\n */\nexport interface AxiosAdapterUploadOptions\n  extends AxiosAdapterBaseOptions,\n    AxiosRequestFormData {\n  /**\n   * [钉钉用 fileName 代替 name](https://open.dingtalk.com/document/orgapp/dd-upload-objects#title-ngk-rr1-eow)\n   */\n  fileName: string;\n  /**\n   * 钉钉 | 支付宝 特有参数\n   */\n  fileType?: 'image' | 'video' | 'audie';\n  /**\n   * 额外的数据\n   */\n  formData?: AnyObject;\n}\n\n/**\n * 请求函数\n */\nexport interface AxiosAdapterRequest {\n  (config: AxiosAdapterRequestOptions): AxiosAdapterPlatformTask;\n}\n\n/**\n * 下载函数\n */\nexport interface AxiosAdapterDownload {\n  (config: AxiosAdapterDownloadOptions): AxiosAdapterPlatformTask;\n}\n\n/**\n * 上传函数\n */\nexport interface AxiosAdapterUpload {\n  (config: AxiosAdapterUploadOptions): AxiosAdapterPlatformTask;\n}\n\n/**\n * 适配器平台\n */\nexport interface AxiosAdapterPlatform {\n  /**\n   * 发送请求\n   */\n  request: AxiosAdapterRequest;\n  /**\n   * 下载文件\n   */\n  download: AxiosAdapterDownload;\n  /**\n   * 上传文件\n   */\n  upload: AxiosAdapterUpload;\n}\n\n/**\n * 适配器平台请求任务\n */\nexport type AxiosAdapterPlatformTask =\n  | undefined\n  | void\n  | {\n      abort?(): void;\n      onProgressUpdate?(callback: (event: AxiosProgressEvent) => void): void;\n      offProgressUpdate?(callback: (event: AxiosProgressEvent) => void): void;\n    };\n\n/**\n * 适配器函数\n */\nexport interface AxiosAdapter {\n  (config: AxiosAdapterRequestConfig): AxiosAdapterPlatformTask;\n}\n\n/**\n * 创建适配器\n *\n * @param platform 平台 API 对象\n */\nexport function createAdapter(platform: AxiosAdapterPlatform) {\n  assert(isPlainObject(platform), 'platform 不是一个 object');\n  assert(isFunction(platform.request), 'request 不是一个 function');\n  assert(isFunction(platform.upload), 'upload 不是一个 function');\n  assert(isFunction(platform.download), 'download 不是一个 function');\n\n  function adapter(\n    config: AxiosAdapterRequestConfig,\n  ): AxiosAdapterPlatformTask {\n    const options = transformOptions(config);\n    switch (config.type) {\n      case 'request':\n        return processRequest(platform.request, options);\n      case 'download':\n        return processDownload(platform.download, options);\n      case 'upload':\n        return processUpload(platform.upload, options);\n    }\n  }\n\n  function transformOptions(\n    config: AxiosAdapterRequestConfig,\n  ): AxiosAdapterBaseOptions {\n    const { success, fail } = config;\n\n    return {\n      ...config,\n      header: config.headers,\n      success(rawRes: AxiosAdapterResponse) {\n        const response = transformResponse(rawRes) as AxiosAdapterResponse;\n        success(response);\n      },\n      fail(rawErr: AxiosAdapterResponseError) {\n        const responseError = {\n          ...transformResponse(rawErr),\n          data: {\n            errno:\n              // 微信 | 飞书新规范\n              rawErr.errno ??\n              // 支付宝 | 钉钉\n              rawErr.error ??\n              // 百度 | 360 | 飞书\n              rawErr.errCode ??\n              // 抖音\n              rawErr.errNo,\n            errMsg:\n              // 飞书新规范\n              rawErr.errString ??\n              // 微信 | 支付宝 | 百度 | 抖音 | QQ | 360 | 飞书\n              rawErr.errMsg ??\n              // 钉钉\n              rawErr.errorMessage,\n          },\n        };\n        fail(responseError);\n      },\n    };\n  }\n\n  function transformResponse(\n    rawRes: AxiosAdapterResponse | AxiosAdapterResponseError,\n  ) {\n    return {\n      ...ignore(\n        rawRes,\n        'statusCode',\n        'header',\n\n        // 错误码\n        'errno',\n        'error',\n        'errCode',\n        'errNo',\n\n        // 错误消息\n        'errMsg',\n        'errorMessage',\n        'errString',\n      ),\n      status: rawRes.status ?? rawRes.statusCode,\n      headers: rawRes.headers ?? rawRes.header,\n    };\n  }\n\n  function processRequest(\n    request: AxiosAdapterRequest,\n    rawOpts: AxiosAdapterBaseOptions,\n  ): AxiosAdapterPlatformTask {\n    return request(rawOpts);\n  }\n\n  function processDownload(\n    download: AxiosAdapterDownload,\n    rawOpts: AxiosAdapterBaseOptions,\n  ): AxiosAdapterPlatformTask {\n    const options = rawOpts as AxiosAdapterDownloadOptions;\n    const { params, success } = options;\n\n    options.filePath = params?.filePath;\n    options.success = (rawRes) => {\n      const response = {\n        ...ignore(rawRes, 'tempFilePath', 'apFilePath', 'filePath', 'fileSize'),\n        data: {\n          filePath: rawRes.filePath,\n          tempFilePath:\n            rawRes.tempFilePath ??\n            // 支付宝\n            rawRes.apFilePath,\n          fileSize:\n            // 飞书\n            rawRes.fileSize,\n        },\n      };\n      success(response);\n    };\n\n    orgIgnore(options, ['params']);\n    return download(options);\n  }\n\n  function processUpload(\n    upload: AxiosAdapterUpload,\n    rawOpts: AxiosAdapterBaseOptions,\n  ): AxiosAdapterPlatformTask {\n    const options = rawOpts as AxiosAdapterUploadOptions;\n    const { data, success } = options;\n    const { name, filePath, fileType, ...formData } = data as AnyObject;\n\n    options.name = name;\n    options.filePath = filePath;\n    options.formData = formData;\n\n    // 支付宝 | 钉钉\n    options.fileName = name;\n    // 支付宝 | 钉钉\n    options.fileType = fileType;\n    options.success = (rawRes) => {\n      const response = { ...rawRes };\n      if (options.responseType === 'text' && options.dataType === 'json') {\n        try {\n          response.data = JSON.parse(rawRes.data);\n        } catch {\n          //\n        }\n      }\n      success(response);\n    };\n\n    orgIgnore(options, ['params', 'data']);\n    return upload(options);\n  }\n\n  return adapter;\n}\n","import { isFunction, isPlainObject } from '../helpers/types';\nimport { AxiosAdapterPlatform, createAdapter } from './createAdapter';\n\n/**\n * 获取支持的平台适配器\n */\nexport function getDefaultAdapter() {\n  const platform = revisePlatformApiNames(getPlatform());\n  if (isPlatform(platform)) {\n    return createAdapter(platform);\n  }\n}\n\nfunction getPlatform() {\n  const undef = 'undefined';\n\n  // 微信小程序\n  if (typeof wx !== undef) {\n    return wx;\n  }\n  // 支付宝小程序\n  else if (typeof my !== undef) {\n    return my;\n  }\n  // 百度小程序\n  else if (typeof swan !== undef) {\n    return swan;\n  }\n  // 抖音小程序 | 飞书小程序\n  else if (typeof tt !== undef) {\n    return tt;\n  }\n  // QQ 小程序\n  else if (typeof qq !== undef) {\n    return qq;\n  }\n  // 360 小程序\n  else if (typeof qh !== undef) {\n    return qh;\n  }\n  // 快手小程序\n  else if (typeof ks !== undef) {\n    return ks;\n  }\n  // 钉钉小程序\n  else if (typeof dd !== undef) {\n    return dd;\n  }\n  // 京东小程序\n  else if (typeof jd !== undef) {\n    return jd;\n  }\n  // 小红书小程序\n  else if (typeof xhs !== undef) {\n    return xhs;\n  }\n}\n\nfunction revisePlatformApiNames(platform?: AnyObject) {\n  if (platform) {\n    return {\n      request: platform.request ?? platform.httpRequest,\n      upload: platform.upload ?? platform.uploadFile,\n      download: platform.download ?? platform.downloadFile,\n    };\n  }\n}\n\nfunction isPlatform(value: any): value is AxiosAdapterPlatform {\n  return (\n    isPlainObject(value) &&\n    isFunction(value.request) &&\n    isFunction(value.upload) &&\n    isFunction(value.download)\n  );\n}\n","import { getDefaultAdapter } from './adpater/getDefaultAdapter';\nimport { AxiosInstanceDefaults } from './core/createInstance';\n\nconst defaults: AxiosInstanceDefaults = {\n  // 适配器，在支持的平台中有值。\n  // 对于不支持平台而言，此值始终为 undefined，需要您手动适配。\n  adapter: getDefaultAdapter(),\n\n  // 请求头\n  headers: {\n    // 通用请求头\n    common: {\n      Accept: 'application/json, text/plain, */*',\n    },\n    options: {}, // OPTIONS 方法请求头\n    get: {}, // GET 方法请求头\n    head: {}, // HEAD 方法请求头\n    post: {}, // POST 方法请求头\n    put: {}, // PUT 方法请求头\n    patch: {}, // PATCH 方法请求头\n    delete: {}, // DELETE 方法请求头\n    trace: {}, // TRACE 方法请求头\n    connect: {}, // CONNECT 方法请求头\n  },\n\n  // 校验状态码\n  validateStatus(status: number): boolean {\n    return status >= 200 && status < 300;\n  },\n\n  // 返回的数据格式\n  dataType: 'json',\n\n  // 响应的数据类型\n  responseType: 'text',\n\n  // 超时时长\n  timeout: 10000,\n};\n\nexport default defaults;\n","export const version = '2.7.2';\n","import {\n  CancelToken,\n  CancelTokenConstructor,\n  isCancel,\n} from './request/cancel';\nimport { isAxiosError } from './request/createError';\nimport Axios, { AxiosConstructor } from './core/Axios';\nimport { AxiosInstance, createInstance } from './core/createInstance';\nimport { createAdapter } from './adpater/createAdapter';\nimport defaults from './defaults';\nimport { version } from './version';\n\n/**\n * axios 静态对象\n */\nexport interface AxiosStatic extends AxiosInstance {\n  /**\n   * 版本号\n   */\n  version: string;\n  /**\n   * Axios 类\n   */\n  Axios: AxiosConstructor;\n  /**\n   * 取消令牌\n   */\n  CancelToken: CancelTokenConstructor;\n  /**\n   * 创建适配器\n   */\n  createAdapter: typeof createAdapter;\n  /**\n   * 传入取消请求错误返回 true\n   */\n  isCancel: typeof isCancel;\n  /**\n   * 传入响应错误返回 true\n   */\n  isAxiosError: typeof isAxiosError;\n}\n\nconst axios = createInstance(defaults) as AxiosStatic;\naxios.version = version;\naxios.Axios = Axios;\naxios.CancelToken = CancelToken;\naxios.createAdapter = createAdapter;\naxios.isCancel = isCancel;\naxios.isAxiosError = isAxiosError;\n\nexport default axios;\n"],"names":["Cancel","message","isCancel","value","CancelToken","executor","action","promise","resolve","cancel","isCancelToken","AxiosError","config","response","request","createError","isAxiosError","PLAIN_METHODS","WITH_PARAMS_METHODS","WITH_DATA_METHODS","WITH_DATA_RE","_toString","isNull","isUndefined","isString","isPlainObject","isArray","isDate","date","isFunction","assert","condition","msg","throwError","ensureObject","dynamicRE","dynamicURL","url","params","data","dataObject","_","$2","_a","deepMerge","objs","result","obj","key","val","rVal","ignore","keys","res","__spreadValues","orgIgnore","commonKey","ignoreKeys","flattenHeaders","headers","mergedHeaders","transformData","transforms","transform","buildURL","paramsSerializer","defaultSerializer","paramsStr","parts","push","encode","k","v","str","absoluteRE","isAbsoluteURL","combineURL","baseURL","transformURL","fullPath","httpStatusCodes","getHttpStatusText","status","generateType","requestType","C","h","P","f","b","x","s","o","c","m","reject","adapterConfig","__spreadProps","success","fail","adapterTask","err","rawResponse","validateStatus","catchError","rawResponseError","responseError","errorResponse","tryToggleProgressUpdate","cancelToken","reason","toggle","type","onUploadProgress","onDownloadProgress","dispatchRequest","throwIfCancellationRequested","dataTransformer","onSuccess","onError","error","fn","InterceptorManager","resolved","rejected","id","e","t","a","l","n","d","u","MiddlewareManager","middleware","ctx","respond","middlewares","next","__async","enhancer","fromConfig2Map","deepMergeConfigMap","mergeConfig","config1","config2","keysSet","val1","val2","A","r","i","p","Axios","parent","urlOrConfig","_b","requestHandler","errorHandler","chain","interceptor","method","createInstance","defaults","parentContext","context","instance","createAdapter","platform","adapter","options","transformOptions","processRequest","processDownload","processUpload","rawRes","transformResponse","rawErr","_c","_d","_e","rawOpts","download","upload","name","filePath","fileType","formData","__objRest","getDefaultAdapter","revisePlatformApiNames","getPlatform","isPlatform","undef","version","axios"],"mappings":"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"}